
/*"Array" of names and colors to select from id*/
@theoremEnvironmentNames:
theorem axiom conjecture corollary proposition lemma claim condition
warning paradox
example model-solution
observation fact remark acknowledgement algorithm notation criterion
idea definition conclusion summary;

@theoremEnvironmentColors:
green green green green green green green green
red red
yellow yellow
cyan cyan cyan cyan cyan cyan cyan
blue blue blue blue;

/*The faux loop the doesn't end up in the final css
@index is the counter
@numInserts is the total number of loops*/


.loopingClass (@index) when (@index < length(@theoremEnvironmentNames)){

   /*This is the name of the class*/
   
   .definition{
   /*.extract(@theoremEnvironmentNames,@index) { */

      /*Here are our properties that get adjusted with the index*/
      background-color: extract(@theoremEnvironmentColors, @index);
      /*These are the things that are common to all environments */
      border-radius: 4pt;
      padding: 4pt;
      margin-top: 4pt;
      margin-bottom: 4pt;
   }
   /*Here we increment our loop*/
   .loopingClass(@index + 1);
}

/* Aha -- without this, you end up trying to execute the code above
when @index is out of the bounds declared by the when clause. This 
throws an "unexpected input" error. */
.loopingClass (20) {} 

/*This calls the loop and starts it. */
.loopingClass(0);


.definition > p:first-child:before
{
    content:"Definition. hahaha ";
    display: inline;
    font-weight: bold;
} 

.theorem > p:first-child:before
{
    content:"Theorem. ";
    display: inline;
    font-weight: bold;
} 

.model-solution > p:first-child:before
{
    content:"Model Solution. ";
    display: inline;
    font-weight: bold;
} 

.example > p:first-child:before
{
    content:"Example. ";
    display: inline;
    font-weight: bold;
} 

.observation > p:first-child:before
{
    content:"Observation. ";
    display: inline;
    font-weight: bold;
} 

.warning > p:first-child:before
{
    content:"Warning. ";
    display: inline;
    font-weight: bold;
} 

