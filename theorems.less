
/*"Array" of names and colors to select from*/
@theoremEnvironments:
theorem green
axiom green
conjecture green
corollary green
proposition green 
lemma green
claim green
condition green
idea green
definition green 
conclusion green
summary green
warning red
paradox red
example yellow
observation yellow
fact yellow
remark yellow
acknowledgement yellow
algorithm yellow
notation yellow
criterion yellow;

/* Change this value to change the saturation and lightness of the background colors of the theorem environments. */
@theoremEnvironmentSaturation: 100%;
@theoremEnvironmentLightness: 92%;

/*The faux loop that doesn't end up in the final css
@index is the counter
length(@theoremEnvironments) is TWICE the total number of loops
but we will increment twice for each iteration */
.loopingClass (@index) when (@index =< length(@theoremEnvironments)){

   /*Extract from arrays the name and color of the class*/
   @nameOfClass: extract(@theoremEnvironments, @index);
   @colorOfClass: extract(@theoremEnvironments, @index+1);
      
   .@{nameOfClass} { 

      /* Take the color of the class, saturate it to a fixed value, and lighten it to a fixed value (see top of file) */
      background-color: hsl(hue(@colorOfClass),@theoremEnvironmentSaturation,@theoremEnvironmentLightness);

      /*These are the things that are common to all environments. */
      border-radius: 4pt; padding: 4pt; margin-top: 4pt; margin-bottom: 4pt;
   }
   .@{nameOfClass} > p:first-child:before
   {
      content:"@{nameOfClass}. ";
      display: inline;
      text-transform: capitalize;   /* CSS here only applies to one word, like "Theorem." or "Example." */
      font-weight: bold; 
   } 

   /*Here we increment our loop*/
   .loopingClass(@index + 2);
}

/*This calls the loop and starts it. */
.loopingClass(1);
